"""Initial persistence layer tables

Revision ID: fdab77b73fb5
Revises: 
Create Date: 2025-06-25 14:54:39.756883

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'fdab77b73fb5'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('cache_entries',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('cache_key', sa.String(length=128), nullable=False),
    sa.Column('url', sa.String(length=2048), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('expires_at', sa.DateTime(), nullable=False),
    sa.Column('last_accessed', sa.DateTime(), nullable=True),
    sa.Column('access_count', sa.Integer(), nullable=True),
    sa.Column('etag', sa.String(length=128), nullable=True),
    sa.Column('last_modified', sa.DateTime(), nullable=True),
    sa.Column('scan_result', sa.Text(), nullable=True),
    sa.Column('compressed_data', sa.LargeBinary(), nullable=True),
    sa.Column('hit_count', sa.Integer(), nullable=True),
    sa.Column('miss_count', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_cache_entries_cache_key'), 'cache_entries', ['cache_key'], unique=True)
    op.create_index(op.f('ix_cache_entries_expires_at'), 'cache_entries', ['expires_at'], unique=False)
    op.create_index(op.f('ix_cache_entries_url'), 'cache_entries', ['url'], unique=False)
    op.create_table('domains',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('category', sa.String(length=50), nullable=True),
    sa.Column('risk_level', sa.String(length=20), nullable=True),
    sa.Column('is_known_tracker', sa.Boolean(), nullable=True),
    sa.Column('first_seen', sa.DateTime(), nullable=True),
    sa.Column('last_seen', sa.DateTime(), nullable=True),
    sa.Column('scan_count', sa.Integer(), nullable=True),
    sa.Column('whois_data', sa.Text(), nullable=True),
    sa.Column('dns_records', sa.Text(), nullable=True),
    sa.Column('ssl_info', sa.Text(), nullable=True),
    sa.Column('gdpr_relevant', sa.Boolean(), nullable=True),
    sa.Column('ccpa_relevant', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_domains_name'), 'domains', ['name'], unique=True)
    op.create_table('scan_metrics',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=True),
    sa.Column('total_scans', sa.Integer(), nullable=True),
    sa.Column('successful_scans', sa.Integer(), nullable=True),
    sa.Column('failed_scans', sa.Integer(), nullable=True),
    sa.Column('avg_scan_duration', sa.Float(), nullable=True),
    sa.Column('avg_privacy_score', sa.Float(), nullable=True),
    sa.Column('total_trackers_found', sa.Integer(), nullable=True),
    sa.Column('unique_domains_found', sa.Integer(), nullable=True),
    sa.Column('high_risk_trackers', sa.Integer(), nullable=True),
    sa.Column('cache_hits', sa.Integer(), nullable=True),
    sa.Column('cache_misses', sa.Integer(), nullable=True),
    sa.Column('cache_hit_ratio', sa.Float(), nullable=True),
    sa.Column('avg_response_time', sa.Float(), nullable=True),
    sa.Column('avg_content_size', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_scan_metrics_date'), 'scan_metrics', ['date'], unique=False)
    op.create_table('scans',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('scan_id', sa.String(length=36), nullable=True),
    sa.Column('url', sa.String(length=2048), nullable=False),
    sa.Column('scan_type', sa.String(length=20), nullable=True),
    sa.Column('javascript_enabled', sa.Boolean(), nullable=True),
    sa.Column('user_agent', sa.String(length=512), nullable=True),
    sa.Column('started_at', sa.DateTime(), nullable=True),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.Column('scan_duration', sa.Float(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('tracker_count', sa.Integer(), nullable=True),
    sa.Column('unique_domains_count', sa.Integer(), nullable=True),
    sa.Column('privacy_score', sa.Integer(), nullable=True),
    sa.Column('risk_level', sa.String(length=20), nullable=True),
    sa.Column('response_time', sa.Float(), nullable=True),
    sa.Column('content_length', sa.Integer(), nullable=True),
    sa.Column('status_code', sa.Integer(), nullable=True),
    sa.Column('redirect_count', sa.Integer(), nullable=True),
    sa.Column('dns_lookup_time', sa.Float(), nullable=True),
    sa.Column('connect_time', sa.Float(), nullable=True),
    sa.Column('ssl_handshake_time', sa.Float(), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('error_details', sa.Text(), nullable=True),
    sa.Column('raw_html', sa.LargeBinary(), nullable=True),
    sa.Column('raw_network_data', sa.Text(), nullable=True),
    sa.Column('screenshot_data', sa.LargeBinary(), nullable=True),
    sa.Column('analysis_results', sa.Text(), nullable=True),
    sa.Column('recommendations', sa.Text(), nullable=True),
    sa.Column('compliance_status', sa.Text(), nullable=True),
    sa.Column('etag', sa.String(length=128), nullable=True),
    sa.Column('last_modified', sa.DateTime(), nullable=True),
    sa.Column('cache_hit', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('scan_id')
    )
    op.create_index('idx_scan_etag', 'scans', ['etag'], unique=False)
    op.create_index('idx_scan_privacy_score', 'scans', ['privacy_score'], unique=False)
    op.create_index('idx_scan_started_at', 'scans', ['started_at'], unique=False)
    op.create_index('idx_scan_status', 'scans', ['status'], unique=False)
    op.create_index('idx_scan_url', 'scans', ['url'], unique=False)
    op.create_index(op.f('ix_scans_url'), 'scans', ['url'], unique=False)
    op.create_table('reports',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('report_id', sa.String(length=36), nullable=True),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('report_type', sa.String(length=50), nullable=False),
    sa.Column('scan_id', sa.Integer(), nullable=False),
    sa.Column('summary', sa.Text(), nullable=True),
    sa.Column('content', sa.Text(), nullable=True),
    sa.Column('format', sa.String(length=20), nullable=True),
    sa.Column('generated_at', sa.DateTime(), nullable=True),
    sa.Column('generated_by', sa.String(length=100), nullable=True),
    sa.Column('file_path', sa.String(length=512), nullable=True),
    sa.Column('file_size', sa.Integer(), nullable=True),
    sa.Column('parameters', sa.Text(), nullable=True),
    sa.Column('template_used', sa.String(length=100), nullable=True),
    sa.Column('is_public', sa.Boolean(), nullable=True),
    sa.Column('access_token', sa.String(length=128), nullable=True),
    sa.Column('expires_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['scan_id'], ['scans.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('report_id')
    )
    op.create_index('idx_report_generated_at', 'reports', ['generated_at'], unique=False)
    op.create_index('idx_report_scan_id', 'reports', ['scan_id'], unique=False)
    op.create_index('idx_report_type', 'reports', ['report_type'], unique=False)
    op.create_table('trackers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('tracker_type', sa.String(length=50), nullable=False),
    sa.Column('category', sa.String(length=50), nullable=False),
    sa.Column('risk_level', sa.String(length=20), nullable=False),
    sa.Column('domain_id', sa.Integer(), nullable=False),
    sa.Column('url_patterns', sa.Text(), nullable=True),
    sa.Column('detection_patterns', sa.Text(), nullable=True),
    sa.Column('detection_method', sa.String(length=50), nullable=True),
    sa.Column('purpose', sa.Text(), nullable=True),
    sa.Column('data_types_collected', sa.Text(), nullable=True),
    sa.Column('gdpr_relevant', sa.Boolean(), nullable=True),
    sa.Column('ccpa_relevant', sa.Boolean(), nullable=True),
    sa.Column('evasion_techniques', sa.Text(), nullable=True),
    sa.Column('obfuscation_methods', sa.Text(), nullable=True),
    sa.Column('first_seen', sa.DateTime(), nullable=True),
    sa.Column('last_updated', sa.DateTime(), nullable=True),
    sa.Column('confidence_score', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['domain_id'], ['domains.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_tracker_category', 'trackers', ['category'], unique=False)
    op.create_index('idx_tracker_risk_level', 'trackers', ['risk_level'], unique=False)
    op.create_index('idx_tracker_type', 'trackers', ['tracker_type'], unique=False)
    op.create_table('scan_tracker_association',
    sa.Column('scan_id', sa.Integer(), nullable=False),
    sa.Column('tracker_id', sa.Integer(), nullable=False),
    sa.Column('confidence', sa.Float(), nullable=True),
    sa.Column('detected_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['scan_id'], ['scans.id'], ),
    sa.ForeignKeyConstraint(['tracker_id'], ['trackers.id'], ),
    sa.PrimaryKeyConstraint('scan_id', 'tracker_id')
    )
    op.drop_index(op.f('idx_scan_results_timestamp'), table_name='scan_results')
    op.drop_index(op.f('idx_scan_results_url'), table_name='scan_results')
    op.drop_table('scan_results')
    op.drop_index(op.f('idx_tracker_patterns_category'), table_name='tracker_patterns')
    op.drop_index(op.f('idx_tracker_patterns_risk_level'), table_name='tracker_patterns')
    op.drop_table('tracker_patterns')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('tracker_patterns',
    sa.Column('id', sa.INTEGER(), nullable=True),
    sa.Column('name', sa.TEXT(), nullable=False),
    sa.Column('category', sa.TEXT(), nullable=False),
    sa.Column('risk_level', sa.TEXT(), nullable=False),
    sa.Column('patterns', sa.TEXT(), nullable=False),
    sa.Column('domains', sa.TEXT(), nullable=False),
    sa.Column('description', sa.TEXT(), nullable=True),
    sa.Column('data_types', sa.TEXT(), nullable=True),
    sa.Column('gdpr_relevant', sa.BOOLEAN(), nullable=True),
    sa.Column('ccpa_relevant', sa.BOOLEAN(), nullable=True),
    sa.Column('detection_method', sa.TEXT(), nullable=True),
    sa.Column('evasion_techniques', sa.TEXT(), nullable=True),
    sa.Column('first_seen', sa.TEXT(), nullable=True),
    sa.Column('last_updated', sa.TEXT(), nullable=True),
    sa.Column('created_at', sa.TEXT(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('idx_tracker_patterns_risk_level'), 'tracker_patterns', ['risk_level'], unique=False)
    op.create_index(op.f('idx_tracker_patterns_category'), 'tracker_patterns', ['category'], unique=False)
    op.create_table('scan_results',
    sa.Column('id', sa.INTEGER(), nullable=True),
    sa.Column('url', sa.TEXT(), nullable=False),
    sa.Column('timestamp', sa.TEXT(), nullable=False),
    sa.Column('scan_type', sa.TEXT(), nullable=False),
    sa.Column('tracker_count', sa.INTEGER(), nullable=False),
    sa.Column('privacy_score', sa.INTEGER(), nullable=True),
    sa.Column('scan_duration', sa.REAL(), nullable=True),
    sa.Column('javascript_enabled', sa.BOOLEAN(), nullable=True),
    sa.Column('error', sa.TEXT(), nullable=True),
    sa.Column('result_data', sa.TEXT(), nullable=False),
    sa.Column('created_at', sa.TEXT(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('idx_scan_results_url'), 'scan_results', ['url'], unique=False)
    op.create_index(op.f('idx_scan_results_timestamp'), 'scan_results', ['timestamp'], unique=False)
    op.drop_table('scan_tracker_association')
    op.drop_index('idx_tracker_type', table_name='trackers')
    op.drop_index('idx_tracker_risk_level', table_name='trackers')
    op.drop_index('idx_tracker_category', table_name='trackers')
    op.drop_table('trackers')
    op.drop_index('idx_report_type', table_name='reports')
    op.drop_index('idx_report_scan_id', table_name='reports')
    op.drop_index('idx_report_generated_at', table_name='reports')
    op.drop_table('reports')
    op.drop_index(op.f('ix_scans_url'), table_name='scans')
    op.drop_index('idx_scan_url', table_name='scans')
    op.drop_index('idx_scan_status', table_name='scans')
    op.drop_index('idx_scan_started_at', table_name='scans')
    op.drop_index('idx_scan_privacy_score', table_name='scans')
    op.drop_index('idx_scan_etag', table_name='scans')
    op.drop_table('scans')
    op.drop_index(op.f('ix_scan_metrics_date'), table_name='scan_metrics')
    op.drop_table('scan_metrics')
    op.drop_index(op.f('ix_domains_name'), table_name='domains')
    op.drop_table('domains')
    op.drop_index(op.f('ix_cache_entries_url'), table_name='cache_entries')
    op.drop_index(op.f('ix_cache_entries_expires_at'), table_name='cache_entries')
    op.drop_index(op.f('ix_cache_entries_cache_key'), table_name='cache_entries')
    op.drop_table('cache_entries')
    # ### end Alembic commands ###
